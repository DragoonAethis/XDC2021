user www-data;

# Do not enable mutliple/auto processes - you'll have issues with
# RTMP streams randomly stopping and broken stats.
worker_processes 1;
pid /run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
}

# On XDC 2021, we have the following setup: Our streaming computer runs OBS Studio
# which pushes everything to a Ubuntu box on Hetzner. Here, Nginx with the RTMP
# module multiplexes that and pushes it to YouTube and media.ccc.de, plus records
# everything locally for processing later.

# On Ubuntu 20.04, apt install nginx-full libnginx-mod-rtmp
# Configure: README.md + https://github.com/sergey-dryabzhinsky/nginx-rtmp-module/blob/dev/doc/directives.md#push

# This config pushes any streams received on rtmp://this.host:1935/{app}/{key}
# to the defined upstreams. There's no auth, we just hope nobody notices or
# port scans the thing, definitely something to figure out in the future...
# There are allow/deny blocks, but they take an IP address, and one of my
# "what if my ISP decides to die" backup plans includes a mobile connection,
# where my IP adddress can be pretty random.

rtmp {
	server {
		listen 21370;
		chunk_size 4000;

		application conference {
			live on;

			# Record everything - make sure the directory exists
			# and is owned by www-data, or nginx will not like this:
			record all;
			record_path /opt/xdc/conference;
			record_unique on;
			record_interval 60m;

			# RTMP endpoints are configured separately for talks/workshops.
			# Make sure to enter your special sauce here :)

			push rtmp://a.rtmp.youtube.com/live2/aaaa-bbbb-cccc-dddd-eeee;
			push rtmp://ingest.c3voc.de/stream/xdc21?auth=it-is-a-mystery;
			push_reconnect 1s;
		}

		application workshops {
			live on;

			# Record everything - same as above:
			record all;
			record_path /opt/xdc/workshops;
			record_unique on;
			record_interval 60m;

			push rtmp://a.rtmp.youtube.com/live2/ffff-gggg-hhhh-iiii-jjjj;
			push rtmp://ingest.c3voc.de/stream/xdc221?auth=secret-mystery;
			push_reconnect 1s;
		}
	}
}

# HTTP can be used for accessing RTMP stats
http {
	gzip on;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	server {
		listen 8080;

		# This URL provides RTMP statistics in XML
		location /stats {
			rtmp_stat all;
		}
	}
}
